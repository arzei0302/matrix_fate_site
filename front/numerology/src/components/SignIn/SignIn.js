import React, { useState } from "react";
import axios from "axios";
import "./SignIn.scss";

const SignIn = ({ isOpen, onClose, onSuccess }) => {
  const [step, setStep] = useState(1);
  const [login, setLogin] = useState("");
  const [code, setCode] = useState("");
  const [showInfoModal, setShowInfoModal] = useState(false);
  const BASE_URL = "https://matrixaaa.duckdns.org";

  if (!isOpen) return null;

  const sendEmail = async (data) => {
    setShowInfoModal(true); 
    if (!data.login) return;
    try {
      await axios.post(`${BASE_URL}/matrix_auth/send-code/`, {
        email: data.login,
      });
      setStep(2);
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

      setTimeout(() => {
        setShowInfoModal(false); // –ê–≤—Ç–æ-—Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫
      }, 1000);
    } catch (error) {
      console.log(error);
    }
  };

  const sendToken = async (data) => {
    try {
      const response = await axios.post(`${BASE_URL}/matrix_auth/verify-code/`, {
        email: data.login,
        code: data.code,
      });

      if (response.data.access && response.data.refresh) {
        localStorage.setItem("accessToken", response.data.access);
        localStorage.setItem("refreshToken", response.data.refresh);

        if (onSuccess) onSuccess();
      }
    } catch (error) {
      console.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞:", error);
    }
  };

  return (
    <div className="signInContentOverlay" onClick={onClose}>
      <div className="signInContent" onClick={(e) => e.stopPropagation()}>
        <button className="close-button" onClick={onClose}>‚úñ</button>
        <div className="signInTitle">–í–æ–π—Ç–∏</div>

        {step === 1 ? (
          <>
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É"
              value={login}
              onChange={(e) => setLogin(e.target.value)}
            />
            <button className="signInButton" onClick={() => sendEmail({ login })}>–î–∞–ª—å—à–µ</button>
          </>
        ) : (
          <>
            <input type="text" value={login} disabled />
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥"
              value={code}
              onChange={(e) => setCode(e.target.value)}
            />
            <div className="signInButtons">
              <button className="nextButton" onClick={() => sendToken({ login, code })}>–í–æ–π—Ç–∏</button>
              <button className="backButton" onClick={() => setStep(1)}>–ù–∞–∑–∞–¥</button>
            </div>
          </>
        )}

        {showInfoModal && (
          <div className="info-modal">
            üìß –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É
          </div>
        )}
      </div>
    </div>
  );
};

export default SignIn;
